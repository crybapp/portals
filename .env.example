# The environment the app is running in, either production, staging or development
NODE_ENV=

# Port which @cryb/portals should listen on
PORT=1337

# The base REST endpoint that is used to talk to @cryb/api
API_URL=http://localhost:4000
# This should the same secure key in @cryb/api/.env under 'PORTALS_API_KEY'
API_KEY=api-portals-key

# This should the same secure key in @cryb/portal/.env under 'PORTALS_KEY'
PORTAL_KEY=portals-portal-key

# The URI used for connecting to the MongoDB database
MONGO_URI=
# The URI used for connecting to Redis instance
REDIS_URI=
# If you're using redis-ha on Kubernetes, set the URI for the Sentinel below
# Make sure to uncomment the below line and uncomment the REDIS_URI line above
# REDIS_SENTINELS=

# Optional: the JSON Google Application Credentials used for gcloud.driver
# GOOGLE_APPLICATION_CREDENTIALS=

# Optional: the Hetzner Cloud API token used for hetznercloud.driver
# HETZNER_API_KEY=
# The Hetzner Cloud image ID used for portal creation.
# Setup guide at https://gist.github.com/69/a60838a5d67807da574edcfd3193af64
# HETZNER_IMAGE_ID=
# The zone ID your portals will be deployed in
# HETZNER_ZONE_ID=nbg1
# The server type your portals will be deployed with
# HETZNER_SERVER_TYPE=cx11

# Optional: the DigitalOcean API token used for digitalocean.driver
# DO_API_TOKEN=
# The region used for portal deployments on DigitalOcean
# DO_REGION=nyc3
# The size the portals will be deployed with
# DO_SIZE=s-1vcpu-1gb
# The image name/ID portals will be deployed with
# Setup guide at https://gist.github.com/69/a60838a5d67807da574edcfd3193af64
# DO_IMAGE=

# Optional: configuration for kubernetes.driver
# The URL of the registry the image for the portal is located at
# K8S_PORTAL_IMAGE_REGISTRY_URL=
# The name of the secret for pulling the image from the registry
# K8S_PORTAL_IMAGE_PULL_SECRET=

# The name of the secret for the container env variables
# K8S_PORTAL_ENV_SECRET=

# The requested CPU limit for the portal instance
# K8S_PORTAL_CPU_LIMIT=
# The requested memory limit for the portal instance
# K8S_PORTAL_MEMORY_LIMIT=
# The requested CPU for the portal instance
# K8S_PORTAL_CPU_REQUESTED=
# The requested memory for the portal instance
# K8S_PORTAL_MEMORY_REQUESTED=
